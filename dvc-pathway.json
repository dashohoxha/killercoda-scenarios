{
    "title": "|DVC Scenarios",
    "description": "Warning: These scenarios were developed during GSoD2019 and might be a bit outdated. For the official version of these scenarios check: https://katacoda.com/dvc",
    "courses": [
        {
            "course_id": "basics-data",
            "title": "Basics: Data Management",
            "description": "The core function of DVC is data tracking and management. Let's see how to do it."
        },
        {
            "course_id": "basics-performance",
            "title": "Basics: Getting the Best Performance",
            "description": "It is important to optimize the DVC setup for having the best performance with handling big data files."
        },
        {
            "course_id": "basics-versioning",
            "title": "Basics: Tracking Data Versions",
            "description": "DVC takes advantage of Git's versioning features to keep track of the data versions."
        },
        {
            "course_id": "basics-sharing",
            "title": "Basics: Sharing Data",
            "description": "DVC facilitates sharing of data between different people that work on the same project."
        },
        {
            "course_id": "basics-pipelines",
            "title": "Basics: Stages And Pipelines",
            "description": "DVC has a built-in way to connect ML steps into a DAG and run the full pipeline end-to-end."
        },
        {
            "course_id": "basics-importing",
            "title": "Basics: Importing Data",
            "description": "Download and track data from another DVC project that is hosted in a Git repository."
        },
        {
            "course_id": "getstarted-initialize",
            "title": "Get Started: Initialize",
            "description": "Install DVC, create a Git project, and initialize DVC."
        },
        {
            "course_id": "getstarted-tracking",
            "title": "Get Started: Data Tracking",
            "description": "Track data files and datasets with DVC."
        },
        {
            "course_id": "getstarted-sharing",
            "title": "Get Started: Data Sharing",
            "description": "Setup a data storage and push/pull cached data to it."
        },
        {
            "course_id": "getstarted-importing",
            "title": "Get Started: Importing Data",
            "description": "Import data from another DVC project."
        },
        {
            "course_id": "getstarted-stages",
            "title": "Get Started: Stages",
            "description": "Process data and generate outputs in a reproducible way."
        },
        {
            "course_id": "getstarted-pipelines",
            "title": "Get Started: Pipelines",
            "description": "Connect stages by outputs and dependencies, to create a dependency graph (or a data pipeline)."
        },
        {
            "course_id": "getstarted-experiments",
            "title": "Get Started: Experiments and Metrics",
            "description": "Try different approaches or solutions and compare their results."
        },
        {
            "course_id": "getstarted-versioning",
            "title": "Get Started: Data Versioning",
            "description": "Checkout previous versions of code and data."
        },
        {
            "course_id": "examples-dvcignore",
            "title": "Examples: .dvcignore",
            "description": "Examples of ignoring files with `.dvcignore`."
        },
        {
            "course_id": "examples-fetch",
            "title": "Examples: dvc fetch",
            "description": "Examples of using the command `dvc fetch`."
        },
        {
            "course_id": "examples-shared-server",
            "title": "Examples: Shared Server",
            "description": "Some teams may prefer using a single shared machine to run their experiments. This allows them to have better resource utilization and to share data of their projects efficiently."
        },
        {
            "course_id": "examples-ssh-storage",
            "title": "Examples: SSH Remote DVC Storage",
            "description": "Sharing data through a SSH remote DVC storage."
        },
        {
            "course_id": "examples-mounted-storage",
            "title": "Examples: Mounted DVC Storage",
            "description": "Sharing data through a DVC storage that is mounted (by sshfs, NFS, Samba, etc.)"
        },
        {
            "course_id": "examples-mounted-cache",
            "title": "Examples: Mounted DVC Cache",
            "description": "Sharing data through a DVC cache that is located on a Network-Attached Storage (NAS)."
        },
        {
            "course_id": "examples-synced-storage",
            "title": "Examples: Synchronized DVC Storage",
            "description": "Sharing data by synchronizing DVC storages through a cloud storage provider."
        },
        {
            "course_id": "tutorials-versioning",
            "title": "Tutorials: Data Versioning",
            "description": "Using DVC commands to work with multiple versions of datasets and ML models."
        },
        {
            "course_id": "tutorials-pipelines",
            "title": "Tutorials: Pipelines",
            "description": "Using DVC commands to build a simple ML pipeline."
        },
        {
            "course_id": "tutorials-scripting",
            "title": "Tutorials: Scripting DVC",
            "description": "Using bash scripting to build stages and pipelines."
        },
        {
            "course_id": "tutorials-mnist",
            "title": "Tutorials: MNIST",
            "description": "Creating a model to classify images of hand-written digits using MNIST as the data-set."
        },
        {
            "course_id": "tutorials-get-started",
            "title": "Tutorials: Get Started",
            "description": "A step-by-step introduction to DVC by building a simple NLP project from scratch."
        }
    ]
}
